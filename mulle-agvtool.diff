6a7,8
> # Fixed escaping: Nat! (19.1.2014) 
> # Udates podspec files too: Nat! (19.4.2014) 
8d9
< 
12c13
<     echo "${COMMAND_BASENAME} - Apple-generic versioning tool for Xcode projects"
---
>     echo "${COMMAND_BASENAME} - Apple-generic compatible versioning tool for Xcode projects and CocoaPods podspecs"
16c17
<     echo "    ${COMMAND_BASENAME} [-noscm | -usecvs | -usesvn] next-version | bump [-all]"
---
>     echo "    ${COMMAND_BASENAME} [-nopodspec] [-noscm | -usecvs | -usesvn] next-version | bump [-all]"
20c21
<     echo "    ${COMMAND_BASENAME} [-noscm | -usecvs | -usesvn] new-version [-all] <versNum>"
---
>     echo "    ${COMMAND_BASENAME} [-nopodspec] [-noscm | -usecvs | -usesvn] new-version [-all] <versNum>"
67c68
< 		echo "There are multiple projects in this directory.  agvtool does not work with multiple projects in the same directory."
---
> 		echo "There are multiple projects in this directory. mulle-agvtool does not work with multiple projects in the same directory."
78a80,97
> 
> find_podspec () {
>     PODSPEC=""
>     ALL_PODSPECS=`/bin/ls -1 -d *.podspec 2>/dev/null`
>     if [ z"${ALL_PODSPECS}" != z ] ; then
> 	for i in ${ALL_PODSPECS} ; do
> 	    if [ z"${PODSPEC}" = z ] ; then
> 		PODSPEC=${i}
> 	    else
> 		echo "There are multiple podspecs in this directory. mulle-agvtool does not work with multiple podspecs in the same directory."
> 		print_usage
> 		exit 3
> 	    fi
> 	done
>     fi
> }
> 
> 
80c99
<     VERSION_NUM=$(sed -n 's/^[ 	]*CURRENT_PROJECT_VERSION =[ 	]*\(.*\);.*$/\1/p' "${PROJECT}" | sort -u)
---
>     VERSION_NUM=$(sed -n 's/^[ 	]*CURRENT_PROJECT_VERSION =[ 	]*[\"]*\(.*\)[\"]*;.*$/\1/p' "${PROJECT}" | sort -u)
139,141c158,166
<     sed "s/\(^[ 	]*CURRENT_PROJECT_VERSION =[ 	]*\)\(.*\)\(;.*$\)/\1${NEW_VERSION_NUM}\3/" "${PROJECT}" > "${PROJECT}.new1"
<     sed "s/\(^[ 	]*DYLIB_CURRENT_VERSION =[ 	]*\)\(.*\)\(;.*$\)/\1${NEW_VERSION_NUM}\3/" "${PROJECT}.new1" > "${PROJECT}.new2"
< 	sed "s/\(^[ 	]*MODULE_VERSION =[ 	]*\)\(.*\)\(;.*$\)/\1${NEW_VERSION_NUM}\3/" "${PROJECT}.new2" > "${PROJECT}.new3"
---
> 
>     NEEDS_ESCAPE=`echo "${NEW_VERSION_NUM}" | tr -d '[^0-9\.]'`
>     if [ z"${NEEDS_ESCAPE}" != z ]; then
>        NEW_VERSION_NUM="\\\"${NEW_VERSION_NUM}\\\"";
>     fi
> 
>     sed "s/\(^[ 	]*CURRENT_PROJECT_VERSION[ 	]*=[ 	]*\)[\"]*\(.*\)[\"]*\(;.*$\)/\1${NEW_VERSION_NUM}\3/" "${PROJECT}" > "${PROJECT}.new1"
>     sed "s/\(^[ 	]*DYLIB_CURRENT_VERSION[ 	]*=[ 	]*\)[\"]*\(.*\)[\"]*\(;.*$\)/\1${NEW_VERSION_NUM}\3/" "${PROJECT}.new1" > "${PROJECT}.new2"
> 	sed "s/\(^[ 	]*MODULE_VERSION[ 	]*=[ 	]*\)[\"]*\(.*\)[\"]*\(;.*$\)/\1${NEW_VERSION_NUM}\3/" "${PROJECT}.new2" > "${PROJECT}.new3"
145c170
< 		sed "/^[ 	]*<key>CFBundleVersion.*$/,/.*$/s/\(^[ 	]*<string>\)\(.*\)\(<\/string>.*$\)/\1${NEW_VERSION_NUM}\3/" "${PROJECT}.new3" > "${PROJECT}.new4"
---
> 		sed "/^[ 	]*<key>CFBundleVersion.*$/,/.*$/s/\(^[ 	]*<string>\)[\"]*\(.*\)[\"]*\(<\/string>.*$\)/\1${NEW_VERSION_NUM}\3/" "${PROJECT}.new3" > "${PROJECT}.new4"
153a179,189
> # If we find a podspec, we update the version of that as well (per default)
>     if [ z"${UPDATE_PODSPEC}" = z"YES" ] ; then
> 	find_podspec
>         if [ z"${PODSPEC}" != z"" ] ; then
>            echo "Updating version in ${PODSPEC}..."
> 	   echo
> 	   sed "s/\(^[ 	]*[a-zA-Z_][a-zA-Z0-9_]*\.version[ 	]*=[ 	]*\)[\"\'].*[\"\'][ 	]*\(.*$\)/\1${NEW_VERSION_NUM}\2/" "${PODSPEC}" > "${PODSPEC}.new"
>  	   mv "${PODSPEC}.new" "${PODSPEC}"
> 	fi
>     fi
> 
472a509,513
> UPDATE_PODSPEC="YES"
> if [ z"$1" = z"-nopodspec" ] ; then
>     UPDATE_PODSPEC="NO"
>     shift
> fi
